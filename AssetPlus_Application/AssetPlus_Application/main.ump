class AssetPlus {
  1 <@>- * User users;
  1 <@>- * MaintenanceTicket ticket;
  1 <@>- * Hotel hotels;
  1 <@>- * Asset assets;
  1 <@>- * AssetType assetTypes;
}

class User
{
 abstract;
 immutable email; //removed the unique because its umple does not support immutable and unique at the same time
  password;
  lazy name;
  lazy phoneNumber;
  
}

class Employee
{
  isA User;
}

class Guest
{
  isA User;
}

class Manager
{
  singleton; //We only need 1 instance of manager
  isA Employee;
  String email = "manager@map.com";
  defaulted String passwor= "manager";
  
  1 manager -- * Asset assets;
}





class Hotel
{
  name;
  adress;
  phoneNumber;
  1 hotel <@>- 1..* Floor floors;
}

class Floor
{
  Integer level;
  1 floor <@>- 1..* Room rooms;
  
}

class Room
{
  Integer number;
  
}

class Location
{
  
  1 location -- 0..1 Room room;
  1 location -- 1 Floor floors;
}





class Asset
{
  autounique assetNumber;
  String purchaseDate;
  int expectedLifespan;
  1 asset -- 1 Location assetLocation;
}

class AssetType {
    name;
  1 assetType-- * Asset assets;
}




class MaintenanceTicket
{
  
  lazy String maintenanceStart;
  lazy Boolean managerApprovalRequired;
  autounique ticketNumber;
  String creationDate;
  description;
  
   
 
  Status status = null;
  lazy TimeEstimate timeEstimate;
  lazy PriorityLevel priorityLevel;
  lazy  maintenanceEnd;
  
  //Set some attributes to lazy(null) because they are not required when creating a ticket
  
  
  
  
  
  enum PriorityLevel {
    URGENT,
    NORMAL,
    LOW
    }

  enum TimeEstimate {
    LESS_THAN_A_DAY,
    ONE_TO_THREE_DAYS,
    THREE_TO_SEVEN_DAYS,
    ONE_TO_THREE_WEEKS,
    THREE_PLUS_WEEKS
    }

  enum Status {
    OPEN,
    CLOSED,
    IN_PROGRESS,
    WAITING_FOR_MANAGER_APPROVAL
    }
  


  
  * maintenanceTickets -- 1 User author;
  1 maintenanceTicket -- * Asset asset;
  1 maintenanceTicket -- * ImageUrl imageURLs;
  

  
  1 maintenanceTicket <@>- 0..* MaintenanceNote maintenanceNotes;
  
  
  1 maintenanceTicket -- 0..1 Employee assignedEmployee;
  
}

  

class MaintenanceNote
{
  date;
  description;
  
  * maintenanceNotes -- 1 Employee;

}

class ImageUrl
{
  url;
  
}



  